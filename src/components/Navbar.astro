---
import Section from './Section.astro';
---

<Section>
	<div class="flex items-center justify-between">
		<div class="text-3xl font-bold">
			<a href="/">
				KGDEV<span class="text-[var(--accent-500)]">.</span>me
			</a>
		</div>
		<div class="flex items-center">
			<!-- Desktop Navigation -->
			<nav>
				<ul class="hidden flex-row sm:flex">
					
					<li><a href="/" class="mr-3 hover:text-[var(--accent-500)]">HOME</a></li>
					<li><a href="/posts" class="mr-3 hover:text-[var(--accent-500)]">BLOG</a></li>
					<li><a href="/projects" class="mr-3 hover:text-[var(--accent-500)]">PROJECTS</a></li>
					<li><a href="/tags" class="hover:text-[var(--accent-500)]">TAGS</a></li>
				</ul>
			</nav>
			<!-- Desktop Theme Switcher -->
			<div class="ml-3 hidden items-center gap-2 sm:flex">
				<div class="relative">
					<button
						id="scheme-button-desktop"
						class="tada cursor-pointer p-2"
						type="button"
						aria-haspopup="menu"
						aria-expanded="false"
						aria-controls="scheme-menu-desktop"
					>
						<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M12 3a9 9 0 1 0 9 9 3 3 0 0 1-3-3 6 6 0 0 0-6-6Z" class="fill-[var(--text-color)]/30"/>
							<path d="M12 3a6 6 0 0 1 6 6 3 3 0 0 0 3 3 9 9 0 1 1-9-9Z" class="fill-[var(--accent-500)]"/>
						</svg>
						<span class="sr-only">Open color scheme menu</span>
					</button>
					<div
						id="scheme-menu-desktop"
						role="menu"
						class="absolute right-0 top-full z-50 mt-2 hidden min-w-44 rounded-md border border-[var(--border-color)] bg-[var(--card-inner-bg)] p-1 shadow-lg"
					>
						<button data-scheme="amber" role="menuitem" class="scheme-option group flex w-full items-center gap-2 rounded-sm px-3 py-2 text-left hover:bg-[var(--card-outer-bg)]">
							<span class="h-3 w-3 rounded-full" style="background-color:#f59e0b"></span>
							<span>Amber</span>
							<svg class="ml-auto hidden h-4 w-4 text-[var(--accent-500)]" viewBox="0 0 20 20" fill="currentColor"><path d="M16.707 5.293a1 1 0 0 1 0 1.414l-7.25 7.25a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L8.5 11.586l6.543-6.543a1 1 0 0 1 1.414 0Z"/></svg>
						</button>
						<button data-scheme="emerald" role="menuitem" class="scheme-option group flex w-full items-center gap-2 rounded-sm px-3 py-2 text-left hover:bg-[var(--card-outer-bg)]">
							<span class="h-3 w-3 rounded-full" style="background-color:#10b981"></span>
							<span>Emerald</span>
							<svg class="ml-auto hidden h-4 w-4 text-[var(--accent-500)]" viewBox="0 0 20 20" fill="currentColor"><path d="M16.707 5.293a1 1 0 0 1 0 1.414l-7.25 7.25a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L8.5 11.586l6.543-6.543a1 1 0 0 1 1.414 0Z"/></svg>
						</button>
						<button data-scheme="indigo" role="menuitem" class="scheme-option group flex w-full items-center gap-2 rounded-sm px-3 py-2 text-left hover:bg-[var(--card-outer-bg)]">
							<span class="h-3 w-3 rounded-full" style="background-color:#6366f1"></span>
							<span>Indigo</span>
							<svg class="ml-auto hidden h-4 w-4 text-[var(--accent-500)]" viewBox="0 0 20 20" fill="currentColor"><path d="M16.707 5.293a1 1 0 0 1 0 1.414l-7.25 7.25a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L8.5 11.586l6.543-6.543a1 1 0 0 1 1.414 0Z"/></svg>
						</button>
						<button data-scheme="rose" role="menuitem" class="scheme-option group flex w-full items-center gap-2 rounded-sm px-3 py-2 text-left hover:bg-[var(--card-outer-bg)]">
							<span class="h-3 w-3 rounded-full" style="background-color:#f43f5e"></span>
							<span>Rose</span>
							<svg class="ml-auto hidden h-4 w-4 text-[var(--accent-500)]" viewBox="0 0 20 20" fill="currentColor"><path d="M16.707 5.293a1 1 0 0 1 0 1.414l-7.25 7.25a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L8.5 11.586l6.543-6.543a1 1 0 0 1 1.414 0Z"/></svg>
						</button>
					</div>
				</div>

				<input type="checkbox" id="light-switch-desktop" class="light-switch sr-only" />
				<label class="tada relative cursor-pointer p-2" for="light-switch-desktop">
					<svg class="dark:hidden" width="16" height="16" xmlns="http://www.w3.org/2000/svg">
						<path
							class="fill-stone-800"
							d="M7 0h2v2H7zM12.88 1.637l1.414 1.415-1.415 1.413-1.413-1.414zM14 7h2v2h-2zM12.95 14.433l-1.414-1.413 1.413-1.415 1.415 1.414zM7 14h2v2H7zM2.98 14.364l-1.413-1.415 1.414-1.414 1.414 1.415zM0 7h2v2H0zM3.05 1.706 4.463 3.12 3.05 4.535 1.636 3.12z"
						></path>
						<path class="fill-gray-900" d="M8 4C5.8 4 4 5.8 4 8s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4Z"
						></path>
					</svg>
					<svg class="hidden dark:block" width="16" height="16" xmlns="http://www.w3.org/2000/svg">
						<path
							class="fill-slate-400"
							d="M6.2 1C3.2 1.8 1 4.6 1 7.9 1 11.8 4.2 15 8.1 15c3.3 0 6-2.2 6.9-5.2C9.7 11.2 4.8 6.3 6.2 1Z"
						></path>
						<path
							class="fill-slate-500"
							d="M12.5 5a.625.625 0 0 1-.625-.625 1.252 1.252 0 0 0-1.25-1.25.625.625 0 1 1 0-1.25 1.252 1.252 0 0 0 1.25-1.25.625.625 0 1 1 1.25 0c.001.69.56 1.249 1.25 1.25a.625.625 0 1 1 0 1.25c-.69.001-1.249.56-1.25 1.25A.625.625 0 0 1 12.5 5Z"
						></path>
					</svg>
					<span class="sr-only">Switch to light / dark version</span>
				</label>
			</div>

			<!-- Mobile Menu Button -->
			<button id="mobile-menu-button" class="p-2 sm:hidden" aria-label="Toggle mobile menu">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-6 w-6"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
					stroke-width="2"
				>
					<path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16"></path>
				</svg>
			</button>
		</div>
	</div>

	<!-- Mobile Menu -->
	<div id="mobile-menu" class="mt-4 hidden rounded-lg border border-[var(--border-color)] bg-[var(--card-inner-bg)] pb-2 shadow-md transition-all duration-300 sm:hidden">
		<nav class="flex flex-col p-3">
			<a href="/" class="border-b border-[var(--border-color)] py-2 hover:text-[var(--accent-500)]">HOME</a>
			<a href="/posts" class="border-b border-[var(--border-color)] py-2 hover:text-[var(--accent-500)]">BLOG</a>
			<a href="/projects" class="border-b border-[var(--border-color)] py-2 hover:text-[var(--accent-500)]">PROJECTS</a>
			<a href="/tags" class="border-b border-[var(--border-color)] py-2 hover:text-[var(--accent-500)]">TAGS</a>

			<!-- Mobile Theme Switcher -->
			<div class="flex items-center justify-between gap-2 py-2">
				<div class="relative">
					<button
						id="scheme-button-mobile"
						class="tada cursor-pointer p-2"
						type="button"
						aria-haspopup="menu"
						aria-expanded="false"
						aria-controls="scheme-menu-mobile"
					>
						<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M12 3a9 9 0 1 0 9 9 3 3 0 0 1-3-3 6 6 0 0 0-6-6Z" class="fill-[var(--text-color)]/30"/>
							<path d="M12 3a6 6 0 0 1 6 6 3 3 0 0 0 3 3 9 9 0 1 1-9-9Z" class="fill-[var(--accent-500)]"/>
						</svg>
						<span class="sr-only">Open color scheme menu</span>
					</button>
					<div
						id="scheme-menu-mobile"
						role="menu"
						class="absolute left-0 top-full z-50 mt-2 hidden w-56 rounded-md border border-[var(--border-color)] bg-[var(--card-inner-bg)] p-1 shadow-lg"
					>
						<button data-scheme="amber" role="menuitem" class="scheme-option group flex w-full items-center gap-2 rounded-sm px-3 py-2 text-left hover:bg-[var(--card-outer-bg)] text-sm">
							<span class="h-3 w-3 rounded-full" style="background-color:#f59e0b"></span>
							<span class="min-w-0 flex-1 truncate">Amber</span>
							<svg class="ml-auto hidden h-5 w-5 shrink-0 text-[var(--accent-500)]" viewBox="0 0 20 20" fill="currentColor"><path d="M16.707 5.293a1 1 0 0 1 0 1.414l-7.25 7.25a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L8.5 11.586l6.543-6.543a1 1 0 0 1 1.414 0Z"/></svg>
						</button>
						<button data-scheme="emerald" role="menuitem" class="scheme-option group flex w-full items-center gap-2 rounded-sm px-3 py-2 text-left hover:bg-[var(--card-outer-bg)] text-sm">
							<span class="h-3 w-3 rounded-full" style="background-color:#10b981"></span>
							<span class="min-w-0 flex-1 truncate">Emerald</span>
							<svg class="ml-auto hidden h-5 w-5 shrink-0 text-[var(--accent-500)]" viewBox="0 0 20 20" fill="currentColor"><path d="M16.707 5.293a1 1 0 0 1 0 1.414l-7.25 7.25a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L8.5 11.586l6.543-6.543a1 1 0 0 1 1.414 0Z"/></svg>
						</button>
						<button data-scheme="indigo" role="menuitem" class="scheme-option group flex w-full items-center gap-2 rounded-sm px-3 py-2 text-left hover:bg-[var(--card-outer-bg)] text-sm">
							<span class="h-3 w-3 rounded-full" style="background-color:#6366f1"></span>
							<span class="min-w-0 flex-1 truncate">Indigo</span>
							<svg class="ml-auto hidden h-5 w-5 shrink-0 text-[var(--accent-500)]" viewBox="0 0 20 20" fill="currentColor"><path d="M16.707 5.293a1 1 0 0 1 0 1.414l-7.25 7.25a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L8.5 11.586l6.543-6.543a1 1 0 0 1 1.414 0Z"/></svg>
						</button>
						<button data-scheme="rose" role="menuitem" class="scheme-option group flex w-full items-center gap-2 rounded-sm px-3 py-2 text-left hover:bg-[var(--card-outer-bg)] text-sm">
							<span class="h-3 w-3 rounded-full" style="background-color:#f43f5e"></span>
							<span class="min-w-0 flex-1 truncate">Rose</span>
							<svg class="ml-auto hidden h-5 w-5 shrink-0 text-[var(--accent-500)]" viewBox="0 0 20 20" fill="currentColor"><path d="M16.707 5.293a1 1 0 0 1 0 1.414l-7.25 7.25a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L8.5 11.586l6.543-6.543a1 1 0 0 1 1.414 0Z"/></svg>
						</button>
					</div>
				</div>
				<input type="checkbox" id="light-switch-mobile" class="light-switch sr-only" />
				<label class="tada relative cursor-pointer p-2" for="light-switch-mobile">
					<svg class="dark:hidden" width="16" height="16" xmlns="http://www.w3.org/2000/svg">
						<path
							class="fill-stone-800"
							d="M7 0h2v2H7zM12.88 1.637l1.414 1.415-1.415 1.413-1.413-1.414zM14 7h2v2h-2zM12.95 14.433l-1.414-1.413 1.413-1.415 1.415 1.414zM7 14h2v2H7zM2.98 14.364l-1.413-1.415 1.414-1.414 1.414 1.415zM0 7h2v2H0zM3.05 1.706 4.463 3.12 3.05 4.535 1.636 3.12z"
						></path>
						<path class="fill-gray-900" d="M8 4C5.8 4 4 5.8 4 8s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4Z"
						></path>
					</svg>
					<svg class="hidden dark:block" width="16" height="16" xmlns="http://www.w3.org/2000/svg">
						<path
							class="fill-slate-400"
							d="M6.2 1C3.2 1.8 1 4.6 1 7.9 1 11.8 4.2 15 8.1 15c3.3 0 6-2.2 6.9-5.2C9.7 11.2 4.8 6.3 6.2 1Z"
						></path>
						<path
							class="fill-slate-500"
							d="M12.5 5a.625.625 0 0 1-.625-.625 1.252 1.252 0 0 0-1.25-1.25.625.625 0 1 1 0-1.25 1.252 1.252 0 0 0 1.25-1.25.625.625 0 1 1 1.25 0c.001.69.56 1.249 1.25 1.25a.625.625 0 1 1 0 1.25c-.69.001-1.249.56-1.25 1.25A.625.625 0 0 1 12.5 5Z"
						></path>
					</svg>
					<span class="sr-only">Switch to light / dark version</span>
				</label>
			</div>
		</nav>
	</div>
</Section>

<script>
	const lightSwitches = document.querySelectorAll('.light-switch');
	const schemeButtons = [
		document.getElementById('scheme-button-desktop'),
		document.getElementById('scheme-button-mobile')
	].filter(Boolean) as HTMLButtonElement[];
	const schemeMenus = [
		document.getElementById('scheme-menu-desktop'),
		document.getElementById('scheme-menu-mobile')
	].filter(Boolean) as HTMLDivElement[];

	function applyTheme(isDark: boolean) {
		if (isDark) {
			document.documentElement.classList.add('dark');
			localStorage.setItem('theme', 'dark');
		} else {
			document.documentElement.classList.remove('dark');
			localStorage.setItem('theme', 'light');
		}
	}

	function applyScheme(scheme: 'amber' | 'emerald' | 'indigo' | 'rose') {
		document.documentElement.setAttribute('data-scheme', scheme);
		localStorage.setItem('scheme', scheme);
		updateSchemeUI(scheme);
	}

	function updateSchemeUI(scheme: 'amber' | 'emerald' | 'indigo' | 'rose') {
		schemeMenus.forEach((menu) => {
			menu.querySelectorAll<HTMLButtonElement>('.scheme-option').forEach((btn) => {
				const isActive = btn.dataset.scheme === scheme;
				btn.setAttribute('aria-checked', isActive ? 'true' : 'false');
				const check = btn.querySelector<SVGElement>('svg');
				if (check) {
					if (isActive) check.classList.remove('hidden');
					else check.classList.add('hidden');
				}
			});
		});
	}

	if (lightSwitches.length > 0) {
		const isDarkTheme = localStorage.getItem('theme') === 'dark';
		applyTheme(isDarkTheme);

		const initialScheme = (localStorage.getItem('scheme') as 'amber' | 'emerald' | 'indigo' | 'rose') || 'amber';
		applyScheme(initialScheme);

		lightSwitches.forEach((lightSwitch) => {
			(lightSwitch as HTMLInputElement).checked = isDarkTheme;
		});

		updateSchemeUI(initialScheme);

		lightSwitches.forEach((lightSwitch) => {
			(lightSwitch as HTMLInputElement).addEventListener('click', () => {
				const isChecked = (lightSwitch as HTMLInputElement).checked;
				applyTheme(isChecked);
			});
		});


		schemeButtons.forEach((btn) => {
			const menuId = btn.getAttribute('aria-controls');
			const menu = menuId ? document.getElementById(menuId) : null;
			if (!menu) return;

			btn.addEventListener('click', (e) => {
				e.stopPropagation();
				const expanded = btn.getAttribute('aria-expanded') === 'true';
				closeAllSchemeMenus();
				if (!expanded) {
					btn.setAttribute('aria-expanded', 'true');
					menu.classList.remove('hidden');
				}
			});

			menu.querySelectorAll<HTMLButtonElement>('.scheme-option').forEach((opt) => {
				opt.addEventListener('click', (ev) => {
					ev.stopPropagation();
					const scheme = opt.dataset.scheme as 'amber' | 'emerald' | 'indigo' | 'rose';
					applyScheme(scheme);
					closeAllSchemeMenus();
				});
			});
		});

		document.addEventListener('click', () => closeAllSchemeMenus());
		document.addEventListener('keydown', (e) => {
			if (e.key === 'Escape') closeAllSchemeMenus();
		});

		function closeAllSchemeMenus() {
			schemeButtons.forEach((b) => b.setAttribute('aria-expanded', 'false'));
			schemeMenus.forEach((m) => m.classList.add('hidden'));
		}
	}

	const mobileMenuButton = document.getElementById('mobile-menu-button');
	const mobileMenu = document.getElementById('mobile-menu');

	if (mobileMenuButton && mobileMenu) {
		mobileMenuButton.addEventListener('click', () => {
			const expanded = mobileMenuButton.getAttribute('aria-expanded') === 'true' || false;
			mobileMenuButton.setAttribute('aria-expanded', (!expanded).toString());
			mobileMenu.classList.toggle('hidden');

			if (!expanded) {
				mobileMenuButton.innerHTML = `
					<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
						<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
					</svg>
				`;
			} else {
				mobileMenuButton.innerHTML = `
					<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
						<path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
					</svg>
				`;
			}
		});
	}
</script>
